version: "3.8"

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672" 
      - "15672:15672"  
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 7s
      retries: 10
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: stock_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

   
  client_side:
    build: ./backend/client_side
    ports:
      - "8000:8000"
    volumes:
      - ./backend/client_side:/app
    depends_on:
      rabbitmq:
        condition: service_healthy  # Wait until RabbitMQ is healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_TIMEOUT=60
      - PYTHONUNBUFFERED=1 

  machine_learning:
    build: 
      context: ./backend/machine_learning
      dockerfile: Dockerfile
    volumes:
      - ./backend/machine_learning:/app
    ports:
      - "8001:8001"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
  
  ml_worker:
    build: 
      context: ./backend/machine_learning
      dockerfile: Dockerfile.worker
    volumes:
      - ./backend/machine_learning:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    restart: unless-stopped



volumes:
    postgres_data: